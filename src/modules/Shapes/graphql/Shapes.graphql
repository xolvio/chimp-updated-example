# Interface for a geometric shape with an ID, name, and area
interface Shape {
  id: ID!
  name: String!
  area: Float!
}

# Implementing the Shape interface for a Circle
type Circle implements Shape {
  id: ID!
  name: String!
  area: Float! @computed
  radius: Float!
}

# Implementing the Shape interface for a Square
type Square implements Shape {
  id: ID!
  name: String!
  area: Float! @computed
  sideLength: Float!
}

# Union to represent either a Shape or a special unknown type
union ShapeOrUnknown = Circle | Square | UnknownShape

# Special type to represent an unknown shape
type UnknownShape {
  description: String
}

# Root Query type to fetch shapes
type Query {
  getShapeById(id: ID!): ShapeOrUnknown
  getShapes: [Shape!]!
}
